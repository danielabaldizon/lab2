

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 01 00:02:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0008                     _PORTD	set	8
   203  0007                     _PORTC	set	7
   204  0006                     _PORTBbits	set	6
   205  000B                     _INTCONbits	set	11
   206  0058                     _RBIF	set	88
   207  0081                     _OPTION_REGbits	set	129
   208  0095                     _WPUBbits	set	149
   209  0096                     _IOCBbits	set	150
   210  0081                     _OPTION_REG	set	129
   211  0086                     _TRISBbits	set	134
   212  0087                     _TRISC	set	135
   213  0088                     _TRISD	set	136
   214  0188                     _ANSEL	set	392
   215  0189                     _ANSELH	set	393
   216                           
   217                           ; #config settings
   218  0000                     
   219                           	psect	cinit
   220  000F                     start_initialization:	
   221  000F                     __initialization:	
   222                           
   223                           ; Clear objects allocated to COMMON
   224  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   225  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   226  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   227  0012                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  0012                     __end_of__initialization:	
   231  0012  0183               	clrf	3
   232  0013  120A  118A  285B   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMMON
   235  0074                     __pbssCOMMON:	
   236  0074                     _AR2:	
   237  0074                     	ds	1
   238  0075                     _AR1:	
   239  0075                     	ds	1
   240  0076                     _cont:	
   241  0076                     	ds	1
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:	
   245  0070                     ?_ISR:	
   246  0070                     ??_ISR:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252                           
   253                           ; 1 bytes @ 0x0
   254  0070                     	ds	4
   255  0074                     ??_main:	
   256                           
   257                           	psect	maintext
   258  005B                     __pmaintext:	
   259                           ; 1 bytes @ 0x4
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 67 in file "lab2.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2
   274 ;; Tracked objects:
   275 ;;		On entry : B00/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   279 ;;      Params:         0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0
   282 ;;      Totals:         0       0       0       0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels required when called:    1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           
   293                           ;psect for function _main
   294  005B                     _main:	
   295  005B                     l681:	
   296                           ;incstack = 0
   297                           ; Regs used in _main: [wreg+status,2]
   298                           
   299                           
   300                           ;lab2.c: 69: ANSELH = 0;
   301  005B  1683               	bsf	3,5	;RP0=1, select bank3
   302  005C  1703               	bsf	3,6	;RP1=1, select bank3
   303  005D  0189               	clrf	9	;volatile
   304                           
   305                           ;lab2.c: 70: ANSEL = 0;
   306  005E  0188               	clrf	8	;volatile
   307                           
   308                           ;lab2.c: 71: TRISD = 0;
   309  005F  1683               	bsf	3,5	;RP0=1, select bank1
   310  0060  1303               	bcf	3,6	;RP1=0, select bank1
   311  0061  0188               	clrf	8	;volatile
   312                           
   313                           ;lab2.c: 72: TRISC = 0;
   314  0062  0187               	clrf	7	;volatile
   315  0063                     l683:	
   316                           
   317                           ;lab2.c: 73: TRISBbits.TRISB7 = 1;
   318  0063  1786               	bsf	6,7	;volatile
   319  0064                     l685:	
   320                           
   321                           ;lab2.c: 74: TRISBbits.TRISB6 = 1;
   322  0064  1706               	bsf	6,6	;volatile
   323  0065                     l687:	
   324                           
   325                           ;lab2.c: 75: OPTION_REG = 0b11100111;
   326  0065  30E7               	movlw	231
   327  0066  0081               	movwf	1	;volatile
   328  0067                     l689:	
   329                           
   330                           ;lab2.c: 79: IOCBbits.IOCB7 = 1;
   331  0067  1796               	bsf	22,7	;volatile
   332  0068                     l691:	
   333                           
   334                           ;lab2.c: 80: IOCBbits.IOCB6 = 1;
   335  0068  1716               	bsf	22,6	;volatile
   336  0069                     l693:	
   337                           
   338                           ;lab2.c: 81: INTCONbits.GIE = 1;
   339  0069  178B               	bsf	11,7	;volatile
   340  006A                     l695:	
   341                           
   342                           ;lab2.c: 82: INTCONbits.RBIE = 1;
   343  006A  158B               	bsf	11,3	;volatile
   344  006B                     l697:	
   345                           
   346                           ;lab2.c: 83: WPUBbits.WPUB7 = 1;
   347  006B  1795               	bsf	21,7	;volatile
   348  006C                     l699:	
   349                           
   350                           ;lab2.c: 84: WPUBbits.WPUB6 = 1;
   351  006C  1715               	bsf	21,6	;volatile
   352  006D                     l701:	
   353                           
   354                           ;lab2.c: 85: OPTION_REGbits.nRBPU = 0;
   355  006D  1381               	bcf	1,7	;volatile
   356  006E                     l703:	
   357                           
   358                           ;lab2.c: 86: INTCONbits.RBIF = 0;
   359  006E  100B               	bcf	11,0	;volatile
   360  006F                     l705:	
   361                           
   362                           ;lab2.c: 90: PORTC = 0;
   363  006F  1283               	bcf	3,5	;RP0=0, select bank0
   364  0070  1303               	bcf	3,6	;RP1=0, select bank0
   365  0071  0187               	clrf	7	;volatile
   366  0072                     l707:	
   367                           
   368                           ;lab2.c: 91: PORTD = 0;
   369  0072  0188               	clrf	8	;volatile
   370  0073                     l709:	
   371                           
   372                           ;lab2.c: 96:     PORTD = cont;
   373  0073  0876               	movf	_cont,w
   374  0074  0088               	movwf	8	;volatile
   375  0075  2873               	goto	l709
   376  0076  120A  118A  280C   	ljmp	start
   377  0079                     __end_of_main:	
   378                           
   379                           	psect	text1
   380  0016                     __ptext1:	
   381 ;; *************** function _ISR *****************
   382 ;; Defined at:
   383 ;;		line 40 in file "lab2.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          4       0       0       0       0
   400 ;;      Totals:         4       0       0       0       0
   401 ;;Total ram usage:        4 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; This function calls:
   404 ;;		Nothing
   405 ;; This function is called by:
   406 ;;		Interrupt level 1
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _ISR
   412  0016                     _ISR:	
   413  0016                     i1l653:	
   414                           
   415                           ;lab2.c: 41:     if (INTCONbits.RBIF == 1){
   416  0016  1C0B               	btfss	11,0	;volatile
   417  0017  2819               	goto	u1_21
   418  0018  281A               	goto	u1_20
   419  0019                     u1_21:	
   420  0019  2854               	goto	i1l48
   421  001A                     u1_20:	
   422  001A                     i1l655:	
   423                           
   424                           ;lab2.c: 42:          if (PORTBbits.RB7 == 0){
   425  001A  1283               	bcf	3,5	;RP0=0, select bank0
   426  001B  1303               	bcf	3,6	;RP1=0, select bank0
   427  001C  1B86               	btfsc	6,7	;volatile
   428  001D  281F               	goto	u2_21
   429  001E  2820               	goto	u2_20
   430  001F                     u2_21:	
   431  001F  2823               	goto	i1l659
   432  0020                     u2_20:	
   433  0020                     i1l657:	
   434                           
   435                           ;lab2.c: 43:         AR1 = 1;
   436  0020  01F5               	clrf	_AR1
   437  0021  0AF5               	incf	_AR1,f
   438                           
   439                           ;lab2.c: 44:     }
   440  0022  2836               	goto	i1l667
   441  0023                     i1l659:	
   442                           
   443                           ;lab2.c: 46:              if (AR1 == 1){
   444  0023  0375               	decf	_AR1,w
   445  0024  1D03               	btfss	3,2
   446  0025  2827               	goto	u3_21
   447  0026  2828               	goto	u3_20
   448  0027                     u3_21:	
   449  0027  2836               	goto	i1l667
   450  0028                     u3_20:	
   451  0028                     i1l661:	
   452                           
   453                           ;lab2.c: 47:                  cont++;
   454  0028  3001               	movlw	1
   455  0029  00F0               	movwf	??_ISR
   456  002A  0870               	movf	??_ISR,w
   457  002B  07F6               	addwf	_cont,f
   458  002C                     i1l663:	
   459                           
   460                           ;lab2.c: 48:                  AR1 = 0;
   461  002C  01F5               	clrf	_AR1
   462  002D                     i1l665:	
   463                           
   464                           ;lab2.c: 49:                  _delay((unsigned long)((25)*(4000000/4000.0)));
   465  002D  3021               	movlw	33
   466  002E  00F1               	movwf	??_ISR+1
   467  002F  3076               	movlw	118
   468  0030  00F0               	movwf	??_ISR
   469  0031                     u8_27:	
   470  0031  0BF0               	decfsz	??_ISR,f
   471  0032  2831               	goto	u8_27
   472  0033  0BF1               	decfsz	??_ISR+1,f
   473  0034  2831               	goto	u8_27
   474  0035  0000               	nop
   475  0036                     i1l667:	
   476                           
   477                           ;lab2.c: 52:     if (PORTBbits.RB6 == 0){
   478  0036  1283               	bcf	3,5	;RP0=0, select bank0
   479  0037  1303               	bcf	3,6	;RP1=0, select bank0
   480  0038  1B06               	btfsc	6,6	;volatile
   481  0039  283B               	goto	u4_21
   482  003A  283C               	goto	u4_20
   483  003B                     u4_21:	
   484  003B  283F               	goto	i1l671
   485  003C                     u4_20:	
   486  003C                     i1l669:	
   487                           
   488                           ;lab2.c: 53:         AR2 = 1;
   489  003C  01F4               	clrf	_AR2
   490  003D  0AF4               	incf	_AR2,f
   491                           
   492                           ;lab2.c: 54:     }
   493  003E  2853               	goto	i1l679
   494  003F                     i1l671:	
   495                           
   496                           ;lab2.c: 56:              if (AR2 == 1){
   497  003F  0374               	decf	_AR2,w
   498  0040  1D03               	btfss	3,2
   499  0041  2843               	goto	u5_21
   500  0042  2844               	goto	u5_20
   501  0043                     u5_21:	
   502  0043  2853               	goto	i1l679
   503  0044                     u5_20:	
   504  0044                     i1l673:	
   505                           
   506                           ;lab2.c: 57:                  cont = cont - 1;
   507  0044  0876               	movf	_cont,w
   508  0045  3EFF               	addlw	255
   509  0046  00F0               	movwf	??_ISR
   510  0047  0870               	movf	??_ISR,w
   511  0048  00F6               	movwf	_cont
   512  0049                     i1l675:	
   513                           
   514                           ;lab2.c: 58:                  AR2 = 0;
   515  0049  01F4               	clrf	_AR2
   516  004A                     i1l677:	
   517                           
   518                           ;lab2.c: 59:                  _delay((unsigned long)((25)*(4000000/4000.0)));
   519  004A  3021               	movlw	33
   520  004B  00F1               	movwf	??_ISR+1
   521  004C  3076               	movlw	118
   522  004D  00F0               	movwf	??_ISR
   523  004E                     u9_27:	
   524  004E  0BF0               	decfsz	??_ISR,f
   525  004F  284E               	goto	u9_27
   526  0050  0BF1               	decfsz	??_ISR+1,f
   527  0051  284E               	goto	u9_27
   528  0052  0000               	nop
   529  0053                     i1l679:	
   530                           
   531                           ;lab2.c: 62:     INTCONbits.RBIF = 0;
   532  0053  100B               	bcf	11,0	;volatile
   533  0054                     i1l48:	
   534  0054  0873               	movf	??_ISR+3,w
   535  0055  008A               	movwf	10
   536  0056  0E72               	swapf	(??_ISR+2)^(0+4294967168),w
   537  0057  0083               	movwf	3
   538  0058  0EFE               	swapf	btemp,f
   539  0059  0E7E               	swapf	btemp,w
   540  005A  0009               	retfie
   541  005B                     __end_of_ISR:	
   542  007E                     btemp	set	126	;btemp
   543  007E                     wtemp0	set	126
   544                           
   545                           	psect	intentry
   546  0004                     __pintentry:	
   547                           ;incstack = 0
   548                           ; Regs used in _ISR: [wreg+status,2+status,0]
   549                           
   550  0004                     interrupt_function:	
   551  007E                     saved_w	set	btemp
   552  0004  00FE               	movwf	btemp
   553  0005  0E03               	swapf	3,w
   554  0006  00F2               	movwf	??_ISR+2
   555  0007  080A               	movf	10,w
   556  0008  00F3               	movwf	??_ISR+3
   557  0009  120A  118A  2816   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 01 00:02:17 2020

             __CFG_CP$OFF 0000                       l701 006D                       l703 006E  
                     l705 006F                       _AR1 0075                       _AR2 0074  
                     l707 0072                       l709 0073                       l681 005B  
                     l691 0068                       l683 0063                       l693 0069  
                     l685 0064                       l695 006A                       l687 0065  
                     l697 006B                       l689 0067                       l699 006C  
            __CFG_CPD$OFF 0000                       _ISR 0016              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _RBIF 0058                      i1l48 0054  
                    u1_20 001A                      u1_21 0019                      u2_20 0020  
                    u2_21 001F                      u3_20 0028                      u3_21 0027  
                    u4_20 003C                      u4_21 003B                      u5_20 0044  
                    u5_21 0043                      u8_27 0031                      u9_27 004E  
            __CFG_WRT$OFF 0000                      _cont 0076                      _main 005B  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l661 0028                     i1l653 0016  
                   i1l671 003F                     i1l663 002C                     i1l655 001A  
                   i1l673 0044                     i1l665 002D                     i1l657 0020  
                   i1l675 0049                     i1l667 0036                     i1l659 0023  
                   i1l677 004A                     i1l669 003C                     i1l679 0053  
                   _PORTC 0007                     _PORTD 0008                     _TRISC 0087  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0079  
                  ??_main 0074                    _ANSELH 0189            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0012            __pcstackCOMMON 0070  
          _OPTION_REGbits 0081                __pmaintext 005B                __pintentry 0004  
                 __ptext1 0016              __size_of_ISR 0045      end_of_initialization 0012  
               _PORTBbits 0006                 _TRISBbits 0086       start_initialization 000F  
             __end_of_ISR 005B  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0074  
               ___latbits 0002         interrupt_function 0004                  _IOCBbits 0096  
                _WPUBbits 0095         __CFG_BOR4V$BOR40V 0000             __size_of_main 001E  
              _INTCONbits 000B                  intlevel1 0000                _OPTION_REG 0081  
