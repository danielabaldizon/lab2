

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 01 01:33:37 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  001F                     _ADCON0bits	set	31
   282  0006                     _PORTBbits	set	6
   283  0008                     _PORTD	set	8
   284  0007                     _PORTC	set	7
   285  000B                     _INTCONbits	set	11
   286  0089                     _TRISEbits	set	137
   287  0085                     _TRISAbits	set	133
   288  0081                     _OPTION_REGbits	set	129
   289  0095                     _WPUBbits	set	149
   290  0096                     _IOCBbits	set	150
   291  0081                     _OPTION_REG	set	129
   292  0086                     _TRISBbits	set	134
   293  0087                     _TRISC	set	135
   294  0088                     _TRISD	set	136
   295  0189                     _ANSELHbits	set	393
   296  0188                     _ANSELbits	set	392
   297  0188                     _ANSEL	set	392
   298  0189                     _ANSELH	set	393
   299                           
   300                           ; #config settings
   301  0000                     
   302                           	psect	cinit
   303  000F                     start_initialization:	
   304  000F                     __initialization:	
   305                           
   306                           ; Clear objects allocated to COMMON
   307  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   308  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   309  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   310  0012                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  0012                     __end_of__initialization:	
   314  0012  0183               	clrf	3
   315  0013  120A  118A  2851   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMMON
   318  0074                     __pbssCOMMON:	
   319  0074                     _AR2:	
   320  0074                     	ds	1
   321  0075                     _AR1:	
   322  0075                     	ds	1
   323  0076                     _cont:	
   324  0076                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:	
   328  0070                     ?_botones:	
   329  0070                     ??_botones:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_ISR:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338                           
   339                           ; 1 bytes @ 0x0
   340  0070                     	ds	2
   341  0072                     ??_ISR:	
   342                           
   343                           ; 1 bytes @ 0x2
   344  0072                     	ds	2
   345  0074                     ??_main:	
   346                           
   347                           	psect	maintext
   348  0051                     __pmaintext:	
   349                           ; 1 bytes @ 0x4
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 47 in file "lab2.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2
   364 ;; Tracked objects:
   365 ;;		On entry : B00/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0
   372 ;;      Totals:         0       0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels required when called:    2
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _main
   384  0051                     _main:	
   385  0051                     l712:	
   386                           ;incstack = 0
   387                           ; Regs used in _main: [wreg+status,2]
   388                           
   389                           
   390                           ;lab2.c: 49: ANSELH = 0;
   391  0051  1683               	bsf	3,5	;RP0=1, select bank3
   392  0052  1703               	bsf	3,6	;RP1=1, select bank3
   393  0053  0189               	clrf	9	;volatile
   394                           
   395                           ;lab2.c: 50: ANSEL = 0;
   396  0054  0188               	clrf	8	;volatile
   397                           
   398                           ;lab2.c: 51: TRISD = 0;
   399  0055  1683               	bsf	3,5	;RP0=1, select bank1
   400  0056  1303               	bcf	3,6	;RP1=0, select bank1
   401  0057  0188               	clrf	8	;volatile
   402                           
   403                           ;lab2.c: 52: TRISC = 0;
   404  0058  0187               	clrf	7	;volatile
   405  0059                     l714:	
   406                           
   407                           ;lab2.c: 53: TRISBbits.TRISB7 = 1;
   408  0059  1786               	bsf	6,7	;volatile
   409  005A                     l716:	
   410                           
   411                           ;lab2.c: 54: TRISBbits.TRISB6 = 1;
   412  005A  1706               	bsf	6,6	;volatile
   413  005B                     l718:	
   414                           
   415                           ;lab2.c: 55: OPTION_REG = 0b11100111;
   416  005B  30E7               	movlw	231
   417  005C  0081               	movwf	1	;volatile
   418  005D                     l720:	
   419                           
   420                           ;lab2.c: 59: IOCBbits.IOCB7 = 1;
   421  005D  1796               	bsf	22,7	;volatile
   422  005E                     l722:	
   423                           
   424                           ;lab2.c: 60: IOCBbits.IOCB6 = 1;
   425  005E  1716               	bsf	22,6	;volatile
   426  005F                     l724:	
   427                           
   428                           ;lab2.c: 61: INTCONbits.GIE = 1;
   429  005F  178B               	bsf	11,7	;volatile
   430  0060                     l726:	
   431                           
   432                           ;lab2.c: 62: INTCONbits.RBIE = 1;
   433  0060  158B               	bsf	11,3	;volatile
   434  0061                     l728:	
   435                           
   436                           ;lab2.c: 63: WPUBbits.WPUB7 = 1;
   437  0061  1795               	bsf	21,7	;volatile
   438  0062                     l730:	
   439                           
   440                           ;lab2.c: 64: WPUBbits.WPUB6 = 1;
   441  0062  1715               	bsf	21,6	;volatile
   442  0063                     l732:	
   443                           
   444                           ;lab2.c: 65: OPTION_REGbits.nRBPU = 0;
   445  0063  1381               	bcf	1,7	;volatile
   446  0064                     l734:	
   447                           
   448                           ;lab2.c: 66: INTCONbits.RBIF = 0;
   449  0064  100B               	bcf	11,0	;volatile
   450  0065                     l736:	
   451                           
   452                           ;lab2.c: 70: PORTC = 0;
   453  0065  1283               	bcf	3,5	;RP0=0, select bank0
   454  0066  1303               	bcf	3,6	;RP1=0, select bank0
   455  0067  0187               	clrf	7	;volatile
   456  0068                     l738:	
   457                           
   458                           ;lab2.c: 71: PORTD = 0;
   459  0068  0188               	clrf	8	;volatile
   460  0069                     l740:	
   461                           
   462                           ;lab2.c: 76:     PORTD = cont;
   463  0069  0876               	movf	_cont,w
   464  006A  0088               	movwf	8	;volatile
   465  006B  2869               	goto	l740
   466  006C  120A  118A  280C   	ljmp	start
   467  006F                     __end_of_main:	
   468                           
   469                           	psect	text1
   470  006F                     __ptext1:	
   471 ;; *************** function _ISR *****************
   472 ;; Defined at:
   473 ;;		line 40 in file "lab2.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          2       0       0       0       0
   490 ;;      Totals:         2       0       0       0       0
   491 ;;Total ram usage:        2 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    1
   494 ;; This function calls:
   495 ;;		_botones
   496 ;; This function is called by:
   497 ;;		Interrupt level 1
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _ISR
   503  006F                     _ISR:	
   504  006F                     i1l708:	
   505                           
   506                           ;lab2.c: 41:     if (INTCONbits.RBIF == 1){
   507  006F  1C0B               	btfss	11,0	;volatile
   508  0070  2872               	goto	u5_21
   509  0071  2873               	goto	u5_20
   510  0072                     u5_21:	
   511  0072  2878               	goto	i1l42
   512  0073                     u5_20:	
   513  0073                     i1l710:	
   514                           
   515                           ;lab2.c: 42:         botones();
   516  0073  120A  118A  2016  120A  118A  	fcall	_botones
   517  0078                     i1l42:	
   518  0078  0873               	movf	??_ISR+1,w
   519  0079  008A               	movwf	10
   520  007A  0E72               	swapf	??_ISR^(0+4294967168),w
   521  007B  0083               	movwf	3
   522  007C  0EFE               	swapf	btemp,f
   523  007D  0E7E               	swapf	btemp,w
   524  007E  0009               	retfie
   525  007F                     __end_of_ISR:	
   526                           
   527                           	psect	intentry
   528  0004                     __pintentry:	
   529                           ;incstack = 0
   530                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   531                           
   532  0004                     interrupt_function:	
   533  007E                     saved_w	set	btemp
   534  0004  00FE               	movwf	btemp
   535  0005  0E03               	swapf	3,w
   536  0006  00F2               	movwf	??_ISR
   537  0007  080A               	movf	10,w
   538  0008  00F3               	movwf	??_ISR+1
   539  0009  120A  118A  286F   	ljmp	_ISR
   540                           
   541                           	psect	text2
   542  0016                     __ptext2:	
   543 ;; *************** function _botones *****************
   544 ;; Defined at:
   545 ;;		line 83 in file "lab2.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2, status,0
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          2       0       0       0       0
   562 ;;      Totals:         2       0       0       0       0
   563 ;;Total ram usage:        2 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_ISR
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _botones
   574  0016                     _botones:	
   575  0016                     i1l682:	
   576                           ;incstack = 0
   577                           ; Regs used in _botones: [wreg+status,2+status,0]
   578                           
   579                           
   580                           ;lab2.c: 85:     if (PORTBbits.RB7 == 0){
   581  0016  1283               	bcf	3,5	;RP0=0, select bank0
   582  0017  1303               	bcf	3,6	;RP1=0, select bank0
   583  0018  1B86               	btfsc	6,7	;volatile
   584  0019  281B               	goto	u1_21
   585  001A  281C               	goto	u1_20
   586  001B                     u1_21:	
   587  001B  281F               	goto	i1l686
   588  001C                     u1_20:	
   589  001C                     i1l684:	
   590                           
   591                           ;lab2.c: 86:         AR1 = 1;
   592  001C  01F5               	clrf	_AR1
   593  001D  0AF5               	incf	_AR1,f
   594                           
   595                           ;lab2.c: 87:     }
   596  001E  2832               	goto	i1l694
   597  001F                     i1l686:	
   598                           
   599                           ;lab2.c: 89:              if (AR1 == 1){
   600  001F  0375               	decf	_AR1,w
   601  0020  1D03               	btfss	3,2
   602  0021  2823               	goto	u2_21
   603  0022  2824               	goto	u2_20
   604  0023                     u2_21:	
   605  0023  2832               	goto	i1l694
   606  0024                     u2_20:	
   607  0024                     i1l688:	
   608                           
   609                           ;lab2.c: 90:                  cont++;
   610  0024  3001               	movlw	1
   611  0025  00F0               	movwf	??_botones
   612  0026  0870               	movf	??_botones,w
   613  0027  07F6               	addwf	_cont,f
   614  0028                     i1l690:	
   615                           
   616                           ;lab2.c: 91:                  AR1 = 0;
   617  0028  01F5               	clrf	_AR1
   618  0029                     i1l692:	
   619                           
   620                           ;lab2.c: 92:                  _delay((unsigned long)((25)*(4000000/4000.0)));
   621  0029  3021               	movlw	33
   622  002A  00F1               	movwf	??_botones+1
   623  002B  3076               	movlw	118
   624  002C  00F0               	movwf	??_botones
   625  002D                     u6_27:	
   626  002D  0BF0               	decfsz	??_botones,f
   627  002E  282D               	goto	u6_27
   628  002F  0BF1               	decfsz	??_botones+1,f
   629  0030  282D               	goto	u6_27
   630  0031  0000               	nop
   631  0032                     i1l694:	
   632                           
   633                           ;lab2.c: 95:     if (PORTBbits.RB6 == 0){
   634  0032  1283               	bcf	3,5	;RP0=0, select bank0
   635  0033  1303               	bcf	3,6	;RP1=0, select bank0
   636  0034  1B06               	btfsc	6,6	;volatile
   637  0035  2837               	goto	u3_21
   638  0036  2838               	goto	u3_20
   639  0037                     u3_21:	
   640  0037  283B               	goto	i1l698
   641  0038                     u3_20:	
   642  0038                     i1l696:	
   643                           
   644                           ;lab2.c: 96:         AR2 = 1;
   645  0038  01F4               	clrf	_AR2
   646  0039  0AF4               	incf	_AR2,f
   647                           
   648                           ;lab2.c: 97:     }
   649  003A  284F               	goto	i1l706
   650  003B                     i1l698:	
   651                           
   652                           ;lab2.c: 99:              if (AR2 == 1){
   653  003B  0374               	decf	_AR2,w
   654  003C  1D03               	btfss	3,2
   655  003D  283F               	goto	u4_21
   656  003E  2840               	goto	u4_20
   657  003F                     u4_21:	
   658  003F  284F               	goto	i1l706
   659  0040                     u4_20:	
   660  0040                     i1l700:	
   661                           
   662                           ;lab2.c: 100:                  cont = cont - 1;
   663  0040  0876               	movf	_cont,w
   664  0041  3EFF               	addlw	255
   665  0042  00F0               	movwf	??_botones
   666  0043  0870               	movf	??_botones,w
   667  0044  00F6               	movwf	_cont
   668  0045                     i1l702:	
   669                           
   670                           ;lab2.c: 101:                  AR2 = 0;
   671  0045  01F4               	clrf	_AR2
   672  0046                     i1l704:	
   673                           
   674                           ;lab2.c: 102:                  _delay((unsigned long)((25)*(4000000/4000.0)));
   675  0046  3021               	movlw	33
   676  0047  00F1               	movwf	??_botones+1
   677  0048  3076               	movlw	118
   678  0049  00F0               	movwf	??_botones
   679  004A                     u7_27:	
   680  004A  0BF0               	decfsz	??_botones,f
   681  004B  284A               	goto	u7_27
   682  004C  0BF1               	decfsz	??_botones+1,f
   683  004D  284A               	goto	u7_27
   684  004E  0000               	nop
   685  004F                     i1l706:	
   686                           
   687                           ;lab2.c: 105:     INTCONbits.RBIF = 0;
   688  004F  100B               	bcf	11,0	;volatile
   689  0050                     i1l59:	
   690  0050  0008               	return
   691  0051                     __end_of_botones:	
   692  007E                     btemp	set	126	;btemp
   693  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_botones

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              2 COMMON     2     2      0
                            _botones
 ---------------------------------------------------------------------------------
 (2) _botones                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _botones

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 01 01:33:37 2020

             __CFG_CP$OFF 0000                       l720 005D                       l712 0051  
                     _AR1 0075                       l730 0062                       l722 005E  
                     l714 0059                       _AR2 0074                       l740 0069  
                     l732 0063                       l724 005F                       l716 005A  
                     l734 0064                       l726 0060                       l718 005B  
                     l736 0065                       l728 0061                       l738 0068  
            __CFG_CPD$OFF 0000                       _ISR 006F              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      i1l42 0078                      i1l59 0050  
                    u1_20 001C                      u1_21 001B                      u2_20 0024  
                    u2_21 0023                      u3_20 0038                      u3_21 0037  
                    u4_20 0040                      u4_21 003F                      u5_20 0073  
                    u5_21 0072                      u6_27 002D                      u7_27 004A  
            __CFG_WRT$OFF 0000                      _cont 0076                      _main 0051  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0072                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l700 0040                     i1l702 0045  
                   i1l710 0073                     i1l704 0046                     i1l706 004F  
                   i1l708 006F                     i1l690 0028                     i1l682 0016  
                   i1l692 0029                     i1l684 001C                     i1l694 0032  
                   i1l686 001F                     i1l696 0038                     i1l688 0024  
                   i1l698 003B                     _PORTC 0007                     _PORTD 0008  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
         __end_of_botones 0051            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 006F                    ??_main 0074  
                  _ANSELH 0189            __CFG_PWRTE$OFF 0000                 ??_botones 0070  
                  saved_w 007E   __end_of__initialization 0012            __pcstackCOMMON 0070  
          _OPTION_REGbits 0081                __pmaintext 0051                __pintentry 0004  
               _ANSELbits 0188                   __ptext1 006F                   __ptext2 0016  
                 _botones 0016              __size_of_ISR 0010      end_of_initialization 0012  
               _PORTBbits 0006                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISEbits 0089       start_initialization 000F               __end_of_ISR 007F  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0074                 ___latbits 0002  
                ?_botones 0070         interrupt_function 0004                  _IOCBbits 0096  
              _ADCON0bits 001F                  _WPUBbits 0095                _ANSELHbits 0189  
        __size_of_botones 003B         __CFG_BOR4V$BOR40V 0000             __size_of_main 001E  
              _INTCONbits 000B                  intlevel1 0000                _OPTION_REG 0081  
