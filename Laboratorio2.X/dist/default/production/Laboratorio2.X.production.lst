

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 01 00:57:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0006                     _PORTBbits	set	6
   204  0008                     _PORTD	set	8
   205  0007                     _PORTC	set	7
   206  000B                     _INTCONbits	set	11
   207  0081                     _OPTION_REGbits	set	129
   208  0095                     _WPUBbits	set	149
   209  0096                     _IOCBbits	set	150
   210  0081                     _OPTION_REG	set	129
   211  0086                     _TRISBbits	set	134
   212  0087                     _TRISC	set	135
   213  0088                     _TRISD	set	136
   214  0188                     _ANSEL	set	392
   215  0189                     _ANSELH	set	393
   216                           
   217                           ; #config settings
   218  0000                     
   219                           	psect	cinit
   220  000F                     start_initialization:	
   221  000F                     __initialization:	
   222                           
   223                           ; Clear objects allocated to COMMON
   224  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   225  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   226  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   227  0012                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  0012                     __end_of__initialization:	
   231  0012  0183               	clrf	3
   232  0013  120A  118A  2851   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMMON
   235  0074                     __pbssCOMMON:	
   236  0074                     _AR2:	
   237  0074                     	ds	1
   238  0075                     _AR1:	
   239  0075                     	ds	1
   240  0076                     _cont:	
   241  0076                     	ds	1
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:	
   245  0070                     ?_botones:	
   246  0070                     ??_botones:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_ISR:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_main:	
   253                           ; 1 bytes @ 0x0
   254                           
   255                           
   256                           ; 1 bytes @ 0x0
   257  0070                     	ds	2
   258  0072                     ??_ISR:	
   259                           
   260                           ; 1 bytes @ 0x2
   261  0072                     	ds	2
   262  0074                     ??_main:	
   263                           
   264                           	psect	maintext
   265  0051                     __pmaintext:	
   266                           ; 1 bytes @ 0x4
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 47 in file "lab2.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   286 ;;      Params:         0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0
   288 ;;      Temps:          0       0       0       0       0
   289 ;;      Totals:         0       0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels required when called:    2
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           
   300                           ;psect for function _main
   301  0051                     _main:	
   302  0051                     l681:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg+status,2]
   305                           
   306                           
   307                           ;lab2.c: 49: ANSELH = 0;
   308  0051  1683               	bsf	3,5	;RP0=1, select bank3
   309  0052  1703               	bsf	3,6	;RP1=1, select bank3
   310  0053  0189               	clrf	9	;volatile
   311                           
   312                           ;lab2.c: 50: ANSEL = 0;
   313  0054  0188               	clrf	8	;volatile
   314                           
   315                           ;lab2.c: 51: TRISD = 0;
   316  0055  1683               	bsf	3,5	;RP0=1, select bank1
   317  0056  1303               	bcf	3,6	;RP1=0, select bank1
   318  0057  0188               	clrf	8	;volatile
   319                           
   320                           ;lab2.c: 52: TRISC = 0;
   321  0058  0187               	clrf	7	;volatile
   322  0059                     l683:	
   323                           
   324                           ;lab2.c: 53: TRISBbits.TRISB7 = 1;
   325  0059  1786               	bsf	6,7	;volatile
   326  005A                     l685:	
   327                           
   328                           ;lab2.c: 54: TRISBbits.TRISB6 = 1;
   329  005A  1706               	bsf	6,6	;volatile
   330  005B                     l687:	
   331                           
   332                           ;lab2.c: 55: OPTION_REG = 0b11100111;
   333  005B  30E7               	movlw	231
   334  005C  0081               	movwf	1	;volatile
   335  005D                     l689:	
   336                           
   337                           ;lab2.c: 59: IOCBbits.IOCB7 = 1;
   338  005D  1796               	bsf	22,7	;volatile
   339  005E                     l691:	
   340                           
   341                           ;lab2.c: 60: IOCBbits.IOCB6 = 1;
   342  005E  1716               	bsf	22,6	;volatile
   343  005F                     l693:	
   344                           
   345                           ;lab2.c: 61: INTCONbits.GIE = 1;
   346  005F  178B               	bsf	11,7	;volatile
   347  0060                     l695:	
   348                           
   349                           ;lab2.c: 62: INTCONbits.RBIE = 1;
   350  0060  158B               	bsf	11,3	;volatile
   351  0061                     l697:	
   352                           
   353                           ;lab2.c: 63: WPUBbits.WPUB7 = 1;
   354  0061  1795               	bsf	21,7	;volatile
   355  0062                     l699:	
   356                           
   357                           ;lab2.c: 64: WPUBbits.WPUB6 = 1;
   358  0062  1715               	bsf	21,6	;volatile
   359  0063                     l701:	
   360                           
   361                           ;lab2.c: 65: OPTION_REGbits.nRBPU = 0;
   362  0063  1381               	bcf	1,7	;volatile
   363  0064                     l703:	
   364                           
   365                           ;lab2.c: 66: INTCONbits.RBIF = 0;
   366  0064  100B               	bcf	11,0	;volatile
   367  0065                     l705:	
   368                           
   369                           ;lab2.c: 70: PORTC = 0;
   370  0065  1283               	bcf	3,5	;RP0=0, select bank0
   371  0066  1303               	bcf	3,6	;RP1=0, select bank0
   372  0067  0187               	clrf	7	;volatile
   373  0068                     l707:	
   374                           
   375                           ;lab2.c: 71: PORTD = 0;
   376  0068  0188               	clrf	8	;volatile
   377  0069                     l709:	
   378                           
   379                           ;lab2.c: 76:     PORTD = cont;
   380  0069  0876               	movf	_cont,w
   381  006A  0088               	movwf	8	;volatile
   382  006B  2869               	goto	l709
   383  006C  120A  118A  280C   	ljmp	start
   384  006F                     __end_of_main:	
   385                           
   386                           	psect	text1
   387  006F                     __ptext1:	
   388 ;; *************** function _ISR *****************
   389 ;; Defined at:
   390 ;;		line 40 in file "lab2.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          2       0       0       0       0
   407 ;;      Totals:         2       0       0       0       0
   408 ;;Total ram usage:        2 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; Hardware stack levels required when called:    1
   411 ;; This function calls:
   412 ;;		_botones
   413 ;; This function is called by:
   414 ;;		Interrupt level 1
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _ISR
   420  006F                     _ISR:	
   421  006F                     i1l677:	
   422                           
   423                           ;lab2.c: 41:     if (INTCONbits.RBIF == 1){
   424  006F  1C0B               	btfss	11,0	;volatile
   425  0070  2872               	goto	u5_21
   426  0071  2873               	goto	u5_20
   427  0072                     u5_21:	
   428  0072  2878               	goto	i1l42
   429  0073                     u5_20:	
   430  0073                     i1l679:	
   431                           
   432                           ;lab2.c: 42:         botones();
   433  0073  120A  118A  2016  120A  118A  	fcall	_botones
   434  0078                     i1l42:	
   435  0078  0873               	movf	??_ISR+1,w
   436  0079  008A               	movwf	10
   437  007A  0E72               	swapf	??_ISR^(0+4294967168),w
   438  007B  0083               	movwf	3
   439  007C  0EFE               	swapf	btemp,f
   440  007D  0E7E               	swapf	btemp,w
   441  007E  0009               	retfie
   442  007F                     __end_of_ISR:	
   443                           
   444                           	psect	intentry
   445  0004                     __pintentry:	
   446                           ;incstack = 0
   447                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   448                           
   449  0004                     interrupt_function:	
   450  007E                     saved_w	set	btemp
   451  0004  00FE               	movwf	btemp
   452  0005  0E03               	swapf	3,w
   453  0006  00F2               	movwf	??_ISR
   454  0007  080A               	movf	10,w
   455  0008  00F3               	movwf	??_ISR+1
   456  0009  120A  118A  286F   	ljmp	_ISR
   457                           
   458                           	psect	text2
   459  0016                     __ptext2:	
   460 ;; *************** function _botones *****************
   461 ;; Defined at:
   462 ;;		line 83 in file "lab2.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          2       0       0       0       0
   479 ;;      Totals:         2       0       0       0       0
   480 ;;Total ram usage:        2 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_ISR
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           
   490                           ;psect for function _botones
   491  0016                     _botones:	
   492  0016                     i1l651:	
   493                           ;incstack = 0
   494                           ; Regs used in _botones: [wreg+status,2+status,0]
   495                           
   496                           
   497                           ;lab2.c: 85:     if (PORTBbits.RB7 == 0){
   498  0016  1283               	bcf	3,5	;RP0=0, select bank0
   499  0017  1303               	bcf	3,6	;RP1=0, select bank0
   500  0018  1B86               	btfsc	6,7	;volatile
   501  0019  281B               	goto	u1_21
   502  001A  281C               	goto	u1_20
   503  001B                     u1_21:	
   504  001B  281F               	goto	i1l655
   505  001C                     u1_20:	
   506  001C                     i1l653:	
   507                           
   508                           ;lab2.c: 86:         AR1 = 1;
   509  001C  01F5               	clrf	_AR1
   510  001D  0AF5               	incf	_AR1,f
   511                           
   512                           ;lab2.c: 87:     }
   513  001E  2832               	goto	i1l663
   514  001F                     i1l655:	
   515                           
   516                           ;lab2.c: 89:              if (AR1 == 1){
   517  001F  0375               	decf	_AR1,w
   518  0020  1D03               	btfss	3,2
   519  0021  2823               	goto	u2_21
   520  0022  2824               	goto	u2_20
   521  0023                     u2_21:	
   522  0023  2832               	goto	i1l663
   523  0024                     u2_20:	
   524  0024                     i1l657:	
   525                           
   526                           ;lab2.c: 90:                  cont++;
   527  0024  3001               	movlw	1
   528  0025  00F0               	movwf	??_botones
   529  0026  0870               	movf	??_botones,w
   530  0027  07F6               	addwf	_cont,f
   531  0028                     i1l659:	
   532                           
   533                           ;lab2.c: 91:                  AR1 = 0;
   534  0028  01F5               	clrf	_AR1
   535  0029                     i1l661:	
   536                           
   537                           ;lab2.c: 92:                  _delay((unsigned long)((25)*(4000000/4000.0)));
   538  0029  3021               	movlw	33
   539  002A  00F1               	movwf	??_botones+1
   540  002B  3076               	movlw	118
   541  002C  00F0               	movwf	??_botones
   542  002D                     u6_27:	
   543  002D  0BF0               	decfsz	??_botones,f
   544  002E  282D               	goto	u6_27
   545  002F  0BF1               	decfsz	??_botones+1,f
   546  0030  282D               	goto	u6_27
   547  0031  0000               	nop
   548  0032                     i1l663:	
   549                           
   550                           ;lab2.c: 95:     if (PORTBbits.RB6 == 0){
   551  0032  1283               	bcf	3,5	;RP0=0, select bank0
   552  0033  1303               	bcf	3,6	;RP1=0, select bank0
   553  0034  1B06               	btfsc	6,6	;volatile
   554  0035  2837               	goto	u3_21
   555  0036  2838               	goto	u3_20
   556  0037                     u3_21:	
   557  0037  283B               	goto	i1l667
   558  0038                     u3_20:	
   559  0038                     i1l665:	
   560                           
   561                           ;lab2.c: 96:         AR2 = 1;
   562  0038  01F4               	clrf	_AR2
   563  0039  0AF4               	incf	_AR2,f
   564                           
   565                           ;lab2.c: 97:     }
   566  003A  284F               	goto	i1l675
   567  003B                     i1l667:	
   568                           
   569                           ;lab2.c: 99:              if (AR2 == 1){
   570  003B  0374               	decf	_AR2,w
   571  003C  1D03               	btfss	3,2
   572  003D  283F               	goto	u4_21
   573  003E  2840               	goto	u4_20
   574  003F                     u4_21:	
   575  003F  284F               	goto	i1l675
   576  0040                     u4_20:	
   577  0040                     i1l669:	
   578                           
   579                           ;lab2.c: 100:                  cont = cont - 1;
   580  0040  0876               	movf	_cont,w
   581  0041  3EFF               	addlw	255
   582  0042  00F0               	movwf	??_botones
   583  0043  0870               	movf	??_botones,w
   584  0044  00F6               	movwf	_cont
   585  0045                     i1l671:	
   586                           
   587                           ;lab2.c: 101:                  AR2 = 0;
   588  0045  01F4               	clrf	_AR2
   589  0046                     i1l673:	
   590                           
   591                           ;lab2.c: 102:                  _delay((unsigned long)((25)*(4000000/4000.0)));
   592  0046  3021               	movlw	33
   593  0047  00F1               	movwf	??_botones+1
   594  0048  3076               	movlw	118
   595  0049  00F0               	movwf	??_botones
   596  004A                     u7_27:	
   597  004A  0BF0               	decfsz	??_botones,f
   598  004B  284A               	goto	u7_27
   599  004C  0BF1               	decfsz	??_botones+1,f
   600  004D  284A               	goto	u7_27
   601  004E  0000               	nop
   602  004F                     i1l675:	
   603                           
   604                           ;lab2.c: 105:     INTCONbits.RBIF = 0;
   605  004F  100B               	bcf	11,0	;volatile
   606  0050                     i1l59:	
   607  0050  0008               	return
   608  0051                     __end_of_botones:	
   609  007E                     btemp	set	126	;btemp
   610  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_botones

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              2 COMMON     2     2      0
                            _botones
 ---------------------------------------------------------------------------------
 (2) _botones                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _botones

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 01 00:57:09 2020

             __CFG_CP$OFF 0000                       l701 0063                       l703 0064  
                     l705 0065                       _AR1 0075                       _AR2 0074  
                     l707 0068                       l709 0069                       l681 0051  
                     l691 005E                       l683 0059                       l693 005F  
                     l685 005A                       l695 0060                       l687 005B  
                     l697 0061                       l689 005D                       l699 0062  
            __CFG_CPD$OFF 0000                       _ISR 006F              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      i1l42 0078                      i1l59 0050  
                    u1_20 001C                      u1_21 001B                      u2_20 0024  
                    u2_21 0023                      u3_20 0038                      u3_21 0037  
                    u4_20 0040                      u4_21 003F                      u5_20 0073  
                    u5_21 0072                      u6_27 002D                      u7_27 004A  
            __CFG_WRT$OFF 0000                      _cont 0076                      _main 0051  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0072                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l651 0016                     i1l661 0029  
                   i1l653 001C                     i1l671 0045                     i1l663 0032  
                   i1l655 001F                     i1l673 0046                     i1l665 0038  
                   i1l657 0024                     i1l675 004F                     i1l667 003B  
                   i1l659 0028                     i1l669 0040                     i1l677 006F  
                   i1l679 0073                     _PORTC 0007                     _PORTD 0008  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
         __end_of_botones 0051            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 006F                    ??_main 0074  
                  _ANSELH 0189            __CFG_PWRTE$OFF 0000                 ??_botones 0070  
                  saved_w 007E   __end_of__initialization 0012            __pcstackCOMMON 0070  
          _OPTION_REGbits 0081                __pmaintext 0051                __pintentry 0004  
                 __ptext1 006F                   __ptext2 0016                   _botones 0016  
            __size_of_ISR 0010      end_of_initialization 0012                 _PORTBbits 0006  
               _TRISBbits 0086       start_initialization 000F               __end_of_ISR 007F  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0074                 ___latbits 0002  
                ?_botones 0070         interrupt_function 0004                  _IOCBbits 0096  
                _WPUBbits 0095          __size_of_botones 003B         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 001E                _INTCONbits 000B                  intlevel1 0000  
              _OPTION_REG 0081  
